# Test Run Report - 2025-06-22T00:14:33.825Z

## Summary
- Exit Code: 1
- Status: ‚ùå FAILED
- Timestamp: 2025-06-22T00:14:33.825Z

## Standard Output
```

> logomesh@0.1.0 test
> vitest


 DEV  v3.2.4 /home/runner/workspace

stdout | src/components/__tests__/Sidebar.test.jsx > Sidebar > filters thoughts based on field name
Error captured: {
  type: [32m'JavaScript Error'[39m,
  message: [32m'setActiveFilters is not a function'[39m,
  filename: [32m'/home/runner/workspace/src/components/Sidebar.tsx'[39m,
  lineno: [33m125[39m,
  colno: [33m5[39m,
  stack: [32m'TypeError: setActiveFilters is not a function\n'[39m +
    [32m'    at /home/runner/workspace/src/components/Sidebar.tsx:125:5\n'[39m +
    [32m'    at commitHookEffectListMount (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:23189:26)\n'[39m +
    [32m'    at commitPassiveMountOnFiber (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:24970:11)\n'[39m +
    [32m'    at commitPassiveMountEffects_complete (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:24930:9)\n'[39m +
    [32m'    at commitPassiveMountEffects_begin (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:24917:7)\n'[39m +
    [32m'    at commitPassiveMountEffects (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:24905:3)\n'[39m +
    [32m'    at flushPassiveEffectsImpl (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:27078:3)\n'[39m +
    [32m'    at flushPassiveEffects (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:27023:14)\n'[39m +
    [32m'    at /home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:26808:9\n'[39m +
    [32m'    at flushActQueue (/home/runner/workspace/node_modules/react/cjs/react.development.js:2667:24)'[39m,
  timestamp: [32m'2025-06-22T00:14:24.054Z'[39m
}
Error captured: {
  type: [32m'Console Error'[39m,
  message: [32m'Error: Uncaught [TypeError: setActiveFilters is not a function]\n'[39m +
    [32m'    at reportException (/home/runner/workspace/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)\n'[39m +
    [32m'    at innerInvokeEventListeners (/home/runner/workspace/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)\n'[39m +
    [32m'    at invokeEventListeners (/home/runner/workspace/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)\n'[39m +
    [32m'    at HTMLUnknownElementImpl._dispatch (/home/runner/workspace/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)\n'[39m +
    [32m'    at HTMLUnknownElementImpl.dispatchEvent (/home/runner/workspace/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)\n'[39m +
    [32m'    at HTMLUnknownElement.dispatchEvent (/home/runner/workspace/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)\n'[39m +
    [32m'    at Object.invokeGuardedCallbackDev (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:4213:16)\n'[39m +
    [32m'    at invokeGuardedCallback (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:4277:31)\n'[39m +
    [32m'    at reportUncaughtErrorInDEV (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:22877:5)\n'[39m +
    [32m'    at captureCommitPhaseError (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:27165:5) TypeError: setActiveFilters is not a function'[39m,
  timestamp: [32m'2025-06-22T00:14:24.061Z'[39m
}
Error captured: {
  type: [32m'Console Error'[39m,
  message: [32m'The above error occurred in the <Sidebar> component:\n'[39m +
    [32m'\n'[39m +
    [32m'    at Sidebar (/home/runner/workspace/src/components/Sidebar.tsx:8:3)\n'[39m +
    [32m'\n'[39m +
    [32m'Consider adding an error boundary to your tree to customize error handling behavior.\n'[39m +
    [32m'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.'[39m,
  timestamp: [32m'2025-06-22T00:14:24.066Z'[39m
}

 ‚ùØ src/components/__tests__/ThoughtDetailPanel.test.jsx (4 tests | 4 failed) 204ms
   √ó ThoughtDetailPanel > renders thought details correctly 155ms
     ‚Üí Unable to find an element with the display value: Test Thought.

Ignored nodes: comments, script, style
[36m<body />[39m
   √ó ThoughtDetailPanel > displays segment fields 16ms
     ‚Üí Unable to find an element with the text: type:. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body />[39m
   √ó ThoughtDetailPanel > shows tags with correct colors 12ms
     ‚Üí Unable to find an element with the text: test. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body />[39m
   √ó ThoughtDetailPanel > updates thought when edited 17ms
     ‚Üí Unable to find an element with the display value: Test Thought.

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ src/components/__tests__/Sidebar.test.jsx (4 tests | 4 failed) 159ms
   √ó Sidebar > renders all thoughts initially 84ms
     ‚Üí Unable to find an element with the text: Philosophy Thought. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body />[39m
   √ó Sidebar > filters thoughts based on field name 46ms
     ‚Üí setActiveFilters is not a function
   √ó Sidebar > resets filters when reset button clicked 12ms
     ‚Üí Unable to find an element with the text: Reset Filters. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body />[39m
   √ó Sidebar > opens add thought modal when button clicked 14ms
     ‚Üí Unable to find an element with the text: Add New Thought. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ src/App.test.jsx (1 test | 1 failed) 140ms
   √ó renders main app components 137ms
     ‚Üí Unable to find an element by: [data-testid="canvas-mock"]

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ src/utils/__tests__/VoiceInputManager.test.js (6 tests | 6 failed) 15ms
   √ó VoiceInputManager > initializes with correct configuration 9ms
     ‚Üí Cannot read properties of undefined (reading 'continuous')
   √ó VoiceInputManager > handles start/stop listening correctly 1ms
     ‚Üí Cannot read properties of undefined (reading 'start')
   √ó VoiceInputManager > handles speech recognition results 1ms
     ‚Üí Cannot read properties of undefined (reading 'onresult')
   √ó VoiceInputManager > handles speech recognition errors 1ms
     ‚Üí Cannot read properties of undefined (reading 'onerror')
   √ó VoiceInputManager > checks browser support correctly 1ms
     ‚Üí window.webkitSpeechRecognition is not a constructor
   √ó VoiceInputManager > should initialize with default options 1ms
     ‚Üí window.webkitSpeechRecognition is not a constructor
 ‚ùØ src/components/__tests__/AddThoughtModal.test.jsx (6 tests | 6 failed) 114ms
   √ó AddThoughtModal > renders all form elements 62ms
     ‚Üí Unable to find an element with the placeholder text of: Title

Ignored nodes: comments, script, style
[36m<body />[39m
   √ó AddThoughtModal > validates title before submission 10ms
     ‚Üí Unable to find an element with the text: Add Thought. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body />[39m
   √ó AddThoughtModal > adds and updates segments 11ms
     ‚Üí Unable to find an element with the text: + Add Segment. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body />[39m
   √ó AddThoughtModal > handles tag addition 8ms
     ‚Üí Unable to find an element with the placeholder text of: Add Tag

Ignored nodes: comments, script, style
[36m<body />[39m
   √ó AddThoughtModal > creates thought with correct data structure 7ms
     ‚Üí Unable to find an element with the placeholder text of: Title

Ignored nodes: comments, script, style
[36m<body />[39m
   √ó handles voice input correctly 13ms
     ‚Üí Unable to find an element with the title: Start recording.

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ src/components/__tests__/Canvas.test.jsx (2 tests | 2 failed) 50ms
   √ó Canvas > renders without crashing 41ms
     ‚Üí Unable to find an element by: [data-testid="cytoscape-mock"]

Ignored nodes: comments, script, style
[36m<body />[39m
   √ó Canvas > should handle thought creation 6ms
     ‚Üí screen.getByRole is not a function
 ‚ùØ src/utils/__tests__/dataHandlers.test.js (3 tests | 3 failed) 21ms
   √ó Data Handling > Export Handler > exports with correct metadata structure 16ms
     ‚Üí expected "spy" to be called at least once
   √ó Data Handling > Import Handler > normalizes legacy format thoughts 2ms
     ‚Üí document.createElement(...).onchange is not a function
   √ó Data Handling > Import Handler > handles modern format with metadata 1ms
     ‚Üí document.createElement(...).onchange is not a function
 ‚ùØ src/services/__tests__/graphService.test.js (2 tests | 1 failed) 18ms
   √ó graphService > findThoughtsByTag returns thoughts with matching tag 16ms
     ‚Üí expected [] to deeply equal [ { properties: { ‚Ä¶(2) } } ]
   ‚úì graphService > findThoughtsByTag returns empty array for non-existent tag 1ms
 ‚úì src/utils/__tests__/eventBus.test.js (3 tests) 5ms

 Test Files  8 failed | 1 passed (9)
      Tests  27 failed | 4 passed (31)
   Start at  00:14:21
   Duration  6.86s (transform 549ms, setup 295ms, collect 2.59s, tests 724ms, environment 10.23s, prepare 2.03s)

 FAIL  Tests failed. Watching for file changes...
       press h to show help, press q to quit

```

## Standard Error
```
[33mThe CJS build of Vite's Node API is deprecated. See https://vite.dev/guide/troubleshooting.html#vite-cjs-node-api-deprecated for more details.[39m
stderr | src/components/__tests__/Sidebar.test.jsx > Sidebar > filters thoughts based on field name
Error: Uncaught [TypeError: setActiveFilters is not a function]
    at reportException (/home/runner/workspace/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/runner/workspace/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/runner/workspace/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/runner/workspace/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/runner/workspace/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/runner/workspace/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at reportUncaughtErrorInDEV (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:22877:5)
    at captureCommitPhaseError (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:27165:5) TypeError: setActiveFilters is not a function
    at [90m/home/runner/workspace/[39msrc/components/Sidebar.tsx:125:5
    at commitHookEffectListMount [90m(/home/runner/workspace/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:23189:26[90m)[39m
    at commitPassiveMountOnFiber [90m(/home/runner/workspace/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:24970:11[90m)[39m
    at commitPassiveMountEffects_complete [90m(/home/runner/workspace/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:24930:9[90m)[39m
    at commitPassiveMountEffects_begin [90m(/home/runner/workspace/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:24917:7[90m)[39m
    at commitPassiveMountEffects [90m(/home/runner/workspace/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:24905:3[90m)[39m
    at flushPassiveEffectsImpl [90m(/home/runner/workspace/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:27078:3[90m)[39m
    at flushPassiveEffects [90m(/home/runner/workspace/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:27023:14[90m)[39m
    at [90m/home/runner/workspace/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:26808:9
    at flushActQueue [90m(/home/runner/workspace/[39mnode_modules/[4mreact[24m/cjs/react.development.js:2667:24[90m)[39m
The above error occurred in the <Sidebar> component:

    at Sidebar (/home/runner/workspace/src/components/Sidebar.tsx:8:3)

Consider adding an error boundary to your tree to customize error handling behavior.
Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.

stderr | src/App.test.jsx > renders main app components
Backend API not available: Error: [vitest] No "apiService" export is defined on the "./services/apiService" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///home/runner/workspace/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///home/runner/workspace/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at loadInitialData [90m(/home/runner/workspace/[39msrc/App.jsx:103:40[90m)[39m
    at [90m/home/runner/workspace/[39msrc/App.jsx:112:5
    at commitHookEffectListMount [90m(/home/runner/workspace/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:23189:26[90m)[39m
    at commitPassiveMountOnFiber [90m(/home/runner/workspace/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:24970:11[90m)[39m
    at commitPassiveMountEffects_complete [90m(/home/runner/workspace/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:24930:9[90m)[39m
    at commitPassiveMountEffects_begin [90m(/home/runner/workspace/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:24917:7[90m)[39m
    at commitPassiveMountEffects [90m(/home/runner/workspace/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:24905:3[90m)[39m
    at flushPassiveEffectsImpl [90m(/home/runner/workspace/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:27078:3[90m)[39m {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"./services/apiService"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | src/components/__tests__/Canvas.test.jsx > Canvas > renders without crashing
Warning: A suspended resource finished loading inside a test, but the event was not wrapped in act(...).

When testing, code that resolves suspended data should be wrapped into act(...):

act(() => {
  /* finish loading suspended data */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act


‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ Failed Tests 27 ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ

 FAIL  src/App.test.jsx > renders main app components
TestingLibraryElementError: Unable to find an element by: [data-testid="canvas-mock"]

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ‚ùØ src/App.test.jsx:32:17
     30| test('renders main app components', () => {
     31|   render(<App />);
     32|   expect(screen.getByTestId('canvas-mock')).toBeInTheDocument();
       |                 ^
     33| });
     34| 

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[1/27]‚éØ

 FAIL  src/services/__tests__/graphService.test.js > graphService > findThoughtsByTag returns thoughts with matching tag
AssertionError: expected [] to deeply equal [ { properties: { ‚Ä¶(2) } } ]

[32m- Expected[39m
[31m+ Received[39m

[32m- [[39m
[32m-   {[39m
[32m-     "properties": {[39m
[32m-       "tags": [[39m
[32m-         {[39m
[32m-           "color": "#000",[39m
[32m-           "name": "tag1",[39m
[32m-         },[39m
[32m-       ],[39m
[32m-       "thought_bubble_id": "01HN5G4K8PMXQ0VGWX7CTBZ3YV",[39m
[32m-     },[39m
[32m-   },[39m
[32m- ][39m
[31m+ [][39m

 ‚ùØ src/services/__tests__/graphService.test.js:17:21
     15|   test('findThoughtsByTag returns thoughts with matching tag', async (‚Ä¶
     16|     const results = await graphService.findThoughtsByTag('tag1');
     17|     expect(results).toEqual([{ properties: mockThoughts[0] }]);
       |                     ^
     18|   });
     19| 

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[2/27]‚éØ

 FAIL  src/components/__tests__/AddThoughtModal.test.jsx > AddThoughtModal > renders all form elements
TestingLibraryElementError: Unable to find an element with the placeholder text of: Title

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ‚ùØ src/components/__tests__/AddThoughtModal.test.jsx:32:19
     30|     );
     31| 
     32|     expect(screen.getByPlaceholderText('Title')).toBeInTheDocument();
       |                   ^
     33|     expect(screen.getByPlaceholderText('Description')).toBeInTheDocume‚Ä¶
     34|     expect(screen.getByPlaceholderText('Add Tag')).toBeInTheDocument();

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[3/27]‚éØ

 FAIL  src/components/__tests__/AddThoughtModal.test.jsx > AddThoughtModal > validates title before submission
TestingLibraryElementError: Unable to find an element with the text: Add Thought. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ‚ùØ src/components/__tests__/AddThoughtModal.test.jsx:48:33
     46|     );
     47| 
     48|     const submitButton = screen.getByText('Add Thought');
       |                                 ^
     49|     fireEvent.click(submitButton);
     50| 

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[4/27]‚éØ

 FAIL  src/components/__tests__/AddThoughtModal.test.jsx > AddThoughtModal > adds and updates segments
TestingLibraryElementError: Unable to find an element with the text: + Add Segment. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ‚ùØ src/components/__tests__/AddThoughtModal.test.jsx:67:37
     65|     );
     66| 
     67|     const addSegmentButton = screen.getByText('+ Add Segment');
       |                                     ^
     68|     fireEvent.click(addSegmentButton);
     69| 

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[5/27]‚éØ

 FAIL  src/components/__tests__/AddThoughtModal.test.jsx > AddThoughtModal > handles tag addition
TestingLibraryElementError: Unable to find an element with the placeholder text of: Add Tag

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ‚ùØ src/components/__tests__/AddThoughtModal.test.jsx:90:29
     88|     );
     89| 
     90|     const tagInput = screen.getByPlaceholderText('Add Tag');
       |                             ^
     91|     fireEvent.change(tagInput, { target: { value: 'test-tag' } });
     92|     fireEvent.change(tagInput, { target: { value: '' } });

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[6/27]‚éØ

 FAIL  src/components/__tests__/AddThoughtModal.test.jsx > AddThoughtModal > creates thought with correct data structure
TestingLibraryElementError: Unable to find an element with the placeholder text of: Title

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ‚ùØ src/components/__tests__/AddThoughtModal.test.jsx:107:29
    105|     );
    106| 
    107|     fireEvent.change(screen.getByPlaceholderText('Title'), {
       |                             ^
    108|       target: { value: 'Test Title' },
    109|     });

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[7/27]‚éØ

 FAIL  src/components/__tests__/AddThoughtModal.test.jsx > handles voice input correctly
TestingLibraryElementError: Unable to find an element with the title: Start recording.

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ‚ùØ src/components/__tests__/AddThoughtModal.test.jsx:161:21
    159|   );
    160| 
    161|   const micButton = getByTitle('Start recording');
       |                     ^
    162|   const description = getByPlaceholderText('Description');
    163| 

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[8/27]‚éØ

 FAIL  src/components/__tests__/Canvas.test.jsx > Canvas > renders without crashing
TestingLibraryElementError: Unable to find an element by: [data-testid="cytoscape-mock"]

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ‚ùØ src/components/__tests__/Canvas.test.jsx:23:12
     21|       </Suspense>
     22|     );
     23|     expect(getByTestId('cytoscape-mock')).toBeInTheDocument();
       |            ^
     24|   });
     25| 

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[9/27]‚éØ

 FAIL  src/components/__tests__/Canvas.test.jsx > Canvas > should handle thought creation
TypeError: screen.getByRole is not a function
 ‚ùØ src/components/__tests__/Canvas.test.jsx:29:30
     27|     render(<Canvas />);
     28| 
     29|     const addButton = screen.getByRole('button', { name: /add thought/‚Ä¶
       |                              ^
     30|     fireEvent.click(addButton);
     31| 

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[10/27]‚éØ

 FAIL  src/components/__tests__/Sidebar.test.jsx > Sidebar > renders all thoughts initially
TestingLibraryElementError: Unable to find an element with the text: Philosophy Thought. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ‚ùØ src/components/__tests__/Sidebar.test.jsx:44:19
     42|   test('renders all thoughts initially', () => {
     43|     render(<Sidebar {...mockProps} />);
     44|     expect(screen.getByText('Philosophy Thought')).toBeInTheDocument();
       |                   ^
     45|     expect(screen.getByText('AI Thought')).toBeInTheDocument();
     46|   });

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[11/27]‚éØ

 FAIL  src/components/__tests__/Sidebar.test.jsx > Sidebar > filters thoughts based on field name
TypeError: setActiveFilters is not a function
 ‚ùØ src/components/Sidebar.tsx:125:5
    123|     const ids = filteredThoughts.map((t) => t.thought_bubble_id);
    124|     setFilteredThoughtIds(ids);
    125|     setActiveFilters(ids);
       |     ^
    126|   }, [filteredThoughts, setActiveFilters]);
    127| 
 ‚ùØ commitHookEffectListMount node_modules/react-dom/cjs/react-dom.development.js:23189:26
 ‚ùØ commitPassiveMountOnFiber node_modules/react-dom/cjs/react-dom.development.js:24970:11
 ‚ùØ commitPassiveMountEffects_complete node_modules/react-dom/cjs/react-dom.development.js:24930:9
 ‚ùØ commitPassiveMountEffects_begin node_modules/react-dom/cjs/react-dom.development.js:24917:7
 ‚ùØ commitPassiveMountEffects node_modules/react-dom/cjs/react-dom.development.js:24905:3
 ‚ùØ flushPassiveEffectsImpl node_modules/react-dom/cjs/react-dom.development.js:27078:3
 ‚ùØ flushPassiveEffects node_modules/react-dom/cjs/react-dom.development.js:27023:14
 ‚ùØ node_modules/react-dom/cjs/react-dom.development.js:26808:9
 ‚ùØ flushActQueue node_modules/react/cjs/react.development.js:2667:24

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[12/27]‚éØ

 FAIL  src/components/__tests__/Sidebar.test.jsx > Sidebar > resets filters when reset button clicked
TestingLibraryElementError: Unable to find an element with the text: Reset Filters. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ‚ùØ src/components/__tests__/Sidebar.test.jsx:67:32
     65|   test('resets filters when reset button clicked', () => {
     66|     render(<Sidebar {...mockProps} />);
     67|     const resetButton = screen.getByText('Reset Filters');
       |                                ^
     68|     fireEvent.click(resetButton);
     69|     expect(mockProps.setActiveFilters).toHaveBeenCalledWith([]);

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[13/27]‚éØ

 FAIL  src/components/__tests__/Sidebar.test.jsx > Sidebar > opens add thought modal when button clicked
TestingLibraryElementError: Unable to find an element with the text: Add New Thought. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ‚ùØ src/components/__tests__/Sidebar.test.jsx:74:30
     72|   test('opens add thought modal when button clicked', () => {
     73|     render(<Sidebar {...mockProps} />);
     74|     const addButton = screen.getByText('Add New Thought');
       |                              ^
     75|     fireEvent.click(addButton);
     76|     expect(mockProps.setShowModal).toHaveBeenCalledWith(true);

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[14/27]‚éØ

 FAIL  src/components/__tests__/ThoughtDetailPanel.test.jsx > ThoughtDetailPanel > renders thought details correctly
TestingLibraryElementError: Unable to find an element with the display value: Test Thought.

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ‚ùØ src/components/__tests__/ThoughtDetailPanel.test.jsx:26:19
     24|     render(<ThoughtDetailPanel thought={mockThought} onUpdate={mockOnU‚Ä¶
     25| 
     26|     expect(screen.getByDisplayValue('Test Thought')).toBeInTheDocument‚Ä¶
       |                   ^
     27|     expect(screen.getByText('Test description')).toBeInTheDocument();
     28|     expect(screen.getByDisplayValue('Test Segment')).toBeInTheDocument‚Ä¶

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[15/27]‚éØ

 FAIL  src/components/__tests__/ThoughtDetailPanel.test.jsx > ThoughtDetailPanel > displays segment fields
TestingLibraryElementError: Unable to find an element with the text: type:. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ‚ùØ src/components/__tests__/ThoughtDetailPanel.test.jsx:34:19
     32|     render(<ThoughtDetailPanel thought={mockThought} onUpdate={mockOnU‚Ä¶
     33| 
     34|     expect(screen.getByText('type:')).toBeInTheDocument();
       |                   ^
     35|     expect(screen.getByDisplayValue('note')).toBeInTheDocument();
     36|     expect(screen.getByText('location:')).toBeInTheDocument();

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[16/27]‚éØ

 FAIL  src/components/__tests__/ThoughtDetailPanel.test.jsx > ThoughtDetailPanel > shows tags with correct colors
TestingLibraryElementError: Unable to find an element with the text: test. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ‚ùØ src/components/__tests__/ThoughtDetailPanel.test.jsx:43:24
     41|     render(<ThoughtDetailPanel thought={mockThought} onUpdate={mockOnU‚Ä¶
     42| 
     43|     const tag = screen.getByText('test');
       |                        ^
     44|     expect(tag).toHaveStyle({ color: 'rgb(16, 185, 129)' });
     45|   });

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[17/27]‚éØ

 FAIL  src/components/__tests__/ThoughtDetailPanel.test.jsx > ThoughtDetailPanel > updates thought when edited
TestingLibraryElementError: Unable to find an element with the display value: Test Thought.

Ignored nodes: comments, script, style
[36m<body />[39m
 ‚ùØ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ‚ùØ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ‚ùØ src/components/__tests__/ThoughtDetailPanel.test.jsx:50:31
     48|     render(<ThoughtDetailPanel thought={mockThought} onUpdate={mockOnU‚Ä¶
     49| 
     50|     const titleInput = screen.getByDisplayValue('Test Thought');
       |                               ^
     51|     fireEvent.change(titleInput, { target: { value: 'Updated Title' } ‚Ä¶
     52| 

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[18/27]‚éØ

 FAIL  src/utils/__tests__/VoiceInputManager.test.js > VoiceInputManager > initializes with correct configuration
TypeError: Cannot read properties of undefined (reading 'continuous')
 ‚ùØ src/utils/__tests__/VoiceInputManager.test.js:28:28
     26| 
     27|     expect(localManager.isListening).toBe(false);
     28|     expect(mockRecognition.continuous).toBe(true);
       |                            ^
     29|     expect(mockRecognition.interimResults).toBe(true);
     30|   });

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[19/27]‚éØ

 FAIL  src/utils/__tests__/VoiceInputManager.test.js > VoiceInputManager > handles start/stop listening correctly
TypeError: Cannot read properties of undefined (reading 'start')
 ‚ùØ src/utils/__tests__/VoiceInputManager.test.js:41:28
     39| 
     40|     localManager.startListening();
     41|     expect(mockRecognition.start).toHaveBeenCalled();
       |                            ^
     42|     expect(localManager.isListening).toBe(true);
     43| 

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[20/27]‚éØ

 FAIL  src/utils/__tests__/VoiceInputManager.test.js > VoiceInputManager > handles speech recognition results
TypeError: Cannot read properties of undefined (reading 'onresult')
 ‚ùØ src/utils/__tests__/VoiceInputManager.test.js:59:21
     57|       resultIndex: 0,
     58|     };
     59|     mockRecognition.onresult(mockResults);
       |                     ^
     60|     expect(onTranscriptUpdate).toHaveBeenCalledWith('Hello world.', tr‚Ä¶
     61| 

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[21/27]‚éØ

 FAIL  src/utils/__tests__/VoiceInputManager.test.js > VoiceInputManager > handles speech recognition errors
TypeError: Cannot read properties of undefined (reading 'onerror')
 ‚ùØ src/utils/__tests__/VoiceInputManager.test.js:88:21
     86|     new VoiceInputManager(onTranscriptUpdate, onError);
     87| 
     88|     mockRecognition.onerror({ error: 'network' });
       |                     ^
     89| 
     90|     expect(onError).toHaveBeenCalledWith('network');

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[22/27]‚éØ

 FAIL  src/utils/__tests__/VoiceInputManager.test.js > VoiceInputManager > checks browser support correctly
TypeError: window.webkitSpeechRecognition is not a constructor
 ‚ùØ VoiceInputManager.initSpeechRecognition src/utils/VoiceInputManager.js:12:26
     10|   initSpeechRecognition() {
     11|     if ('webkitSpeechRecognition' in window) {
     12|       this.recognition = new window.webkitSpeechRecognition();
       |                          ^
     13|       this.recognition.continuous = true;
     14|       this.recognition.interimResults = true;
 ‚ùØ new VoiceInputManager src/utils/VoiceInputManager.js:7:10
 ‚ùØ src/utils/__tests__/VoiceInputManager.test.js:104:32

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[23/27]‚éØ

 FAIL  src/utils/__tests__/VoiceInputManager.test.js > VoiceInputManager > should initialize with default options
TypeError: window.webkitSpeechRecognition is not a constructor
 ‚ùØ VoiceInputManager.initSpeechRecognition src/utils/VoiceInputManager.js:12:26
     10|   initSpeechRecognition() {
     11|     if ('webkitSpeechRecognition' in window) {
     12|       this.recognition = new window.webkitSpeechRecognition();
       |                          ^
     13|       this.recognition.continuous = true;
     14|       this.recognition.interimResults = true;
 ‚ùØ new VoiceInputManager src/utils/VoiceInputManager.js:7:10
 ‚ùØ src/utils/__tests__/VoiceInputManager.test.js:109:21

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[24/27]‚éØ

 FAIL  src/utils/__tests__/dataHandlers.test.js > Data Handling > Export Handler > exports with correct metadata structure
AssertionError: expected "spy" to be called at least once
 ‚ùØ src/utils/__tests__/dataHandlers.test.js:78:42
     76|       const anchorNode = appendChildSpy.mock.calls[0][0];
     77|       expect(anchorNode.download).toBeDefined();
     78|       expect(global.URL.createObjectURL).toHaveBeenCalled();
       |                                          ^
     79|     });
     80|   });

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[25/27]‚éØ

 FAIL  src/utils/__tests__/dataHandlers.test.js > Data Handling > Import Handler > normalizes legacy format thoughts
TypeError: document.createElement(...).onchange is not a function
 ‚ùØ src/utils/__tests__/dataHandlers.test.js:105:32
    103| 
    104|       const changeEvent = { target: { files: [new Blob()] } };
    105|       document.createElement().onchange(changeEvent);
       |                                ^
    106| 
    107|       fileReader.onload({ target: { result: fileReader.result } });

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[26/27]‚éØ

 FAIL  src/utils/__tests__/dataHandlers.test.js > Data Handling > Import Handler > handles modern format with metadata
TypeError: document.createElement(...).onchange is not a function
 ‚ùØ src/utils/__tests__/dataHandlers.test.js:153:32
    151| 
    152|       const changeEvent = { target: { files: [new Blob()] } };
    153|       document.createElement().onchange(changeEvent);
       |                                ^
    154| 
    155|       fileReader.onload({ target: { result: fileReader.result } });

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[27/27]‚éØ


```

## Environment Info
- Node Version: v20.12.2
- Platform: linux
- Working Directory: /home/runner/workspace

## Quick Analysis
‚úÖ 1 tests passed
‚ùå 4 tests failed
‚ö†Ô∏è  Vite CJS deprecation warning detected
üé§ Speech recognition test issues detected
‚è±Ô∏è  Test duration: 6.86s (good)
