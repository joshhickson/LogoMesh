 b.  **Refine Interfaces with Planned Schema Enhancements (DTO Focus):**
            *   Update interfaces in `/contracts/entities.ts` referencing Phase 1 SQLite schema plans.
            *   **Define base types for extensibility at the top of `/contracts/entities.ts`:**
                ```typescript
                export type PredefinedContentType = 'text' | 'image' | 'audio' | 'video' | 'link';
                export type CustomContentType = string & { _brand?: 'CustomContentType' };
                export type ContentType = PredefinedContentType | CustomContentType;

                export type PredefinedAbstractionLevel = 'Fact' | 'Idea' | 'Theme' | 'Goal';
                export type CustomAbstractionLevel = string & { _brand?: 'CustomAbstractionLevel' };
                export type AbstractionLevel = PredefinedAbstractionLevel | CustomAbstractionLevel;

                export type FieldValue = string | number | boolean | Date | string[] | number[]; // Expand as needed
                ```
            *   **Refine `Segment` interface:**
                ```typescript
                export interface Segment {
                  segment_id: string;
                  thought_bubble_id: string;
                  title: string;
                  content: string;
                  content_type: ContentType; // Default 'text'
                  asset_path?: string;
                  fields: Record<string, FieldValue>; // DTO representation
                  embedding_vector?: number[];
                  created_at: string; // ISO date string
                  updated_at: string; // ISO date string
                  abstraction_level: AbstractionLevel; // Default 'Fact'
                  local_priority: number; // Default 0.5
                  cluster_id: string; // Default 'uncategorized_cluster'
                }
                ```
            *   **Refine `Thought` interface:**
                ```typescript
                export interface Thought {
                  thought_bubble_id: string;
                  title: string;
                  description?: string;
                  created_at: string; // ISO date string
                  updated_at: string; // ISO date string
                  color?: string;
                  position?: { x: number; y: number };
                  tags?: Tag[]; // Optional DTO convenience
                  segments?: Segment[]; // Optional DTO convenience
                }
                ```
            *   *(Note for AI Agent): Other interfaces like `SegmentNeighbor` can be defined later if needed as DTOs.*