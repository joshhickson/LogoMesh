 FAIL  src/utils/__tests__/dataHandlers.test.js
  ● Data Handling › Export Handler › exports with correct metadata structure

    SyntaxError: "undefined" is not valid JSON
        at JSON.parse (<anonymous>)

      49 |       const anchorNode = appendChildSpy.mock.calls[0][0];
      50 |       const exportData = decodeURIComponent(anchorNode.href).split(',')[1];
    > 51 |       const parsedData = JSON.parse(exportData);
         |                               ^
      52 |       
      53 |       expect(parsedData).toHaveProperty('export_metadata');
      54 |       expect(parsedData.export_metadata).toHaveProperty('version', '0.5.0');

      at Object.<anonymous> (src/utils/__tests__/dataHandlers.test.js:51:31)

  ● Data Handling › Import Handler › normalizes legacy format thoughts

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Array [
        Object {
          "color": "#10b981",
    -     "created_at": Any<String>,
    +     "created_at": "2025-05-04T02:09:10.763Z",
          "description": "",
    -     "position": Any<Object>,
    +     "position": Object {
    +       "x": 134.24989465276425,
    +       "y": 62.81651366905694,
    +     },
          "segments": Array [
            Object {
              "content": "",
              "embedding_vector": Array [],
              "fields": Object {},
    -         "segment_id": "test-segment-id",
    +         "segment_id": undefined,
              "title": "Legacy Segment",
            },
          ],
          "tags": Array [],
    -     "thought_bubble_id": "test-bubble-id",
    +     "thought_bubble_id": undefined,
          "title": "Legacy Thought",
        },
      ],

    Number of calls: 1

      83 |       fileReader.onload({ target: { result: fileReader.result } });
      84 |       
    > 85 |       expect(callback).toHaveBeenCalledWith([{
         |                        ^
      86 |         thought_bubble_id: 'test-bubble-id',
      87 |         title: 'Legacy Thought',
      88 |         description: '',

      at Object.<anonymous> (src/utils/__tests__/dataHandlers.test.js:85:24)

  ● Data Handling › Import Handler › handles modern format with metadata

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

    @@ -8,10 +8,11 @@
            "y": 0,
          },
          "segments": Array [
            Object {
              "content": "Test content",
    +         "embedding_vector": Array [],
              "fields": Object {
                "type": "note",
              },
              "segment_id": "segment-123",
              "title": "Test Segment",,

    Number of calls: 1

      127 |       fileReader.onload({ target: { result: fileReader.result } });
      128 |       
    > 129 |       expect(callback).toHaveBeenCalledWith(mockThoughts);
          |                        ^
      130 |     });
      131 |   });
      132 | });

      at Object.<anonymous> (src/utils/__tests__/dataHandlers.test.js:129:24)

 FAIL  src/components/__tests__/ThoughtDetailPanel.test.jsx
  ● ThoughtDetailPanel › renders thought details correctly

    TestingLibraryElementError: Unable to find an element with the text: Test Thought. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="w-1/4 p-4 border-l bg-gray-50 dark:bg-gray-800 overflow-y-auto"
        >
          <input
            class="text-lg font-bold mb-2 w-full bg-transparent border-b border-transparent hover:border-gray-300 focus:border-blue-500 outline-none"
            type="text"
            value="Test Thought"
          />
          <textarea
            class="mb-2 w-full bg-transparent border border-transparent hover:border-gray-300 focus:border-blue-500 outline-none resize-y"
          >
            Test description
          </textarea>
          <p
            class="mb-2 text-sm text-gray-500"
          >
            Created: 
            Invalid Date
          </p>
          <div
            class="mb-4"
          >
            <strong>
              Tags:
            </strong>
            <ul
              class="mt-1"
            >
              <li
                style="color: rgb(16, 185, 129);"
              >
                test
              </li>
            </ul>
          </div>
          <div>
            <h3
              class="text-md font-semibold mb-2"
            >
              Segments:
            </h3>
            <div
              class="mb-4 border-t pt-2"
            >
              <input
                class="font-medium w-full bg-transparent border-b border-transparent hover:border-gray-300 focus:border-blue-500 outline-none"
                type="text"
                value="Test Segment"
              />
              <textarea
                class="text-sm mb-1 w-full bg-transparent border border-transparent hover:border-gray-300 focus:border-blue-500 outline-none resize-y"
              >
                Test content
              </textarea>
              <div
                class="ml-2 text-sm text-gray-700 dark:text-gray-300"
              >
                <p>
                  <strong>
                    type
                    :
                  </strong>
                   
                  note
                </p>
                <p>
                  <strong>
                    location
                    :
                  </strong>
                   
                  home
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </body>

      27 |     render(<ThoughtDetailPanel thought={mockThought} setThoughts={mockSetThoughts} />);
      28 |     
    > 29 |     expect(screen.getByText('Test Thought')).toBeInTheDocument();
         |                   ^
      30 |     expect(screen.getByText('Test description')).toBeInTheDocument();
      31 |     expect(screen.getByText('Test Segment')).toBeInTheDocument();
      32 |   });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/ThoughtDetailPanel.test.jsx:29:19)

  ● ThoughtDetailPanel › shows tags with correct colors

    expect(element).toHaveStyle()

    - Expected

    - backgroundColor: rgb(16, 185, 129);

      45 |     
      46 |     const tag = screen.getByText('test');
    > 47 |     expect(tag).toHaveStyle({ backgroundColor: '#10b981' });
         |                 ^
      48 |   });
      49 |
      50 |   test('updates thought when edited', () => {

      at Object.<anonymous> (src/components/__tests__/ThoughtDetailPanel.test.jsx:47:17)

 FAIL  src/components/__tests__/Sidebar.test.jsx
  ● Sidebar › filters thoughts based on field name

    TestingLibraryElementError: Unable to find an element with the text: + Add predefined field. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="w-1/4 p-4 border-r bg-gray-50 dark:bg-gray-800 overflow-y-auto"
        >
          <div
            class="flex justify-between items-center mb-4"
          >
            <span
              class="text-sm text-gray-500 dark:text-gray-400"
            >
              Schema v
              0.5
            </span>
            <h2
              class="text-lg font-bold"
            >
              Thought List
            </h2>
            <button
              class="px-2 py-1 bg-gray-300 dark:bg-gray-600 rounded"
            >
              Toggle Mode
            </button>
          </div>
          <button
            class="w-full mb-2 px-4 py-2 bg-blue-500 text-white rounded"
          >
            Add New Thought
          </button>
          <button
            class="w-full mb-2 px-4 py-2 bg-green-500 text-white rounded"
          >
            Export All
          </button>
          <button
            class="w-full mb-2 px-4 py-2 bg-yellow-500 text-black rounded"
          >
            Export Filtered
          </button>
          <button
            class="w-full mb-4 px-4 py-2 bg-indigo-500 text-white rounded"
          >
            Import from JSON
          </button>
          <div
            class="mb-4"
          >
            <h3
              class="text-md font-semibold mb-2"
            >
              Filter Segments
            </h3>
            <label
              class="block mb-1 font-medium"
            >
              Field Names:
            </label>
            <select
              class="w-full mb-2 p-2 border rounded"
              multiple=""
            >
              <option
                value="type"
              >
                type
              </option>
              <option
                value="domain"
              >
                domain
              </option>
            </select>
            <label
              class="block mb-1 font-medium"
            >
              Field Value:
            </label>
            <input
              class="w-full mb-2 p-2 border rounded"
              placeholder="Enter value to match"
              type="text"
              value=""
            />
            <label
              class="block mb-1 font-medium"
            >
              Field Types (soon):
            </label>
            <select
              class="w-full mb-4 p-2 border rounded"
              multiple=""
            >
              <option
                value="text"
              >
                text
              </option>
              <option
                value="location"
              >
                location
              </option>
              <option
                value="date"
              >
                date
              </option>
              <option
                value="numeric"
              >
                numeric
              </option>
            </select>
            <button
              class="w-full bg-gray-400 text-black py-1 rounded"
            >
              Reset Filters
            </button>
          </div>
          <div
            class="mb-4 text-sm text-gray-700 dark:text-gray-300"
          >
            <strong>
              Active Filters:
            </strong>
            <ul
              class="list-disc list-inside"
            >
              <li>
                None
              </li>
            </ul>
          </div>
          <ul>
            <li
              class="mb-3"
            >
              <div
                class="cursor-pointer font-semibold hover:underline"
              >
                Philosophy Thought
              </div>
              <ul
                class="ml-3 mt-1 text-sm"
              >
                <li
                  class="text-gray-600 dark:text-gray-300"
                >
                  - 
                  Logic
                </li>
              </ul>
            </li>
            <li
              class="mb-3"
            >
              <div
                class="cursor-pointer font-semibold hover:underline"
              >
                AI Thought
              </div>
              <ul
                class="ml-3 mt-1 text-sm"
              >
                <li
                  class="text-gray-600 dark:text-gray-300"
                >
                  - 
                  Neural Networks
                </li>
              </ul>
            </li>
          </ul>
          <div
            class="mt-6"
          >
            <h3
              class="text-md font-semibold mb-2"
            >
              Batch Edit
            </h3>
            <button
              class="w-full mb-2 px-4 py-1 bg-purple-500 text-white rounded"
            >
              Add Tag to Filtered
            </button>
            <button
              class="w-full px-4 py-1 bg-pink-500 text-white rounded"
            >
              Change Color of Filtered
            </button>
          </div>
        </div>
      </div>
    </body>

      46 |   test('filters thoughts based on field name', () => {
      47 |     render(<Sidebar {...mockProps} />);
    > 48 |     const select = screen.getByText('+ Add predefined field');
         |                           ^
      49 |     fireEvent.change(select, { target: { value: 'domain' } });
      50 |     expect(mockProps.setActiveFilters).toHaveBeenCalled();
      51 |   });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/Sidebar.test.jsx:48:27)

  ● Sidebar › resets filters when reset button clicked

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: []
    Received
           1
            - Array []
            + Array [
            +   "test-1",
            +   "test-2",
            + ],
           2
            - Array []
            + Array [
            +   "test-1",
            +   "test-2",
            + ],

    Number of calls: 2

      55 |     const resetButton = screen.getByText('Reset Filters');
      56 |     fireEvent.click(resetButton);
    > 57 |     expect(mockProps.setActiveFilters).toHaveBeenCalledWith([]);
         |                                        ^
      58 |   });
      59 |
      60 |   test('opens add thought modal when button clicked', () => {

      at Object.<anonymous> (src/components/__tests__/Sidebar.test.jsx:57:40)

 FAIL  src/components/__tests__/AddThoughtModal.test.jsx
  ● Console

    console.error
      Error: Not implemented: window.alert
          at module.exports (/home/runner/workspace/node_modules/jest-environment-jsdom/node_modules/jsdom/lib/jsdom/browser/not-implemented.js:9:17)
          at alert (/home/runner/workspace/node_modules/jest-environment-jsdom/node_modules/jsdom/lib/jsdom/browser/Window.js:866:7)
          at handleSubmit (/home/runner/workspace/src/components/AddThoughtModal.jsx:101:7)
          at HTMLUnknownElement.callCallback (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:4164:14)
          at HTMLUnknownElement.callTheUserObjectsOperation (/home/runner/workspace/node_modules/jest-environment-jsdom/node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
          at innerInvokeEventListeners (/home/runner/workspace/node_modules/jest-environment-jsdom/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
          at invokeEventListeners (/home/runner/workspace/node_modules/jest-environment-jsdom/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
          at HTMLUnknownElementImpl._dispatch (/home/runner/workspace/node_modules/jest-environment-jsdom/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
          at HTMLUnknownElementImpl.dispatchEvent (/home/runner/workspace/node_modules/jest-environment-jsdom/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:94:17)
          at HTMLUnknownElement.dispatchEvent (/home/runner/workspace/node_modules/jest-environment-jsdom/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:231:34)
          at Object.invokeGuardedCallbackDev (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
          at invokeGuardedCallback (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
          at invokeGuardedCallbackAndCatchFirstError (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:4291:25)
          at executeDispatch (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:9041:3)
          at processDispatchQueueItemsInOrder (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:9073:7)
          at processDispatchQueue (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:9086:5)
          at dispatchEventsForPlugins (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:9097:3)
          at /home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:9288:12
          at batchedUpdates$1 (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:26179:12)
          at batchedUpdates (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:3991:12)
          at dispatchEventForPluginEventSystem (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:9287:3)
          at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:6465:5)
          at dispatchEvent (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:6457:5)
          at dispatchDiscreteEvent (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:6430:5)
          at HTMLDivElement.callTheUserObjectsOperation (/home/runner/workspace/node_modules/jest-environment-jsdom/node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
          at innerInvokeEventListeners (/home/runner/workspace/node_modules/jest-environment-jsdom/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
          at invokeEventListeners (/home/runner/workspace/node_modules/jest-environment-jsdom/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
          at HTMLButtonElementImpl._dispatch (/home/runner/workspace/node_modules/jest-environment-jsdom/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
          at HTMLButtonElementImpl.dispatchEvent (/home/runner/workspace/node_modules/jest-environment-jsdom/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:94:17)
          at HTMLButtonElement.dispatchEvent (/home/runner/workspace/node_modules/jest-environment-jsdom/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:231:34)
          at /home/runner/workspace/node_modules/@testing-library/dom/dist/events.js:19:20
          at /home/runner/workspace/node_modules/@testing-library/react/dist/pure.js:108:16
          at /home/runner/workspace/node_modules/@testing-library/react/dist/act-compat.js:48:24
          at act (/home/runner/workspace/node_modules/react/cjs/react.development.js:2512:16)
          at /home/runner/workspace/node_modules/@testing-library/react/dist/act-compat.js:47:25
          at Object.eventWrapper (/home/runner/workspace/node_modules/@testing-library/react/dist/pure.js:107:28)
          at fireEvent (/home/runner/workspace/node_modules/@testing-library/dom/dist/events.js:12:35)
          at Function.fireEvent.<computed> [as click] (/home/runner/workspace/node_modules/@testing-library/dom/dist/events.js:110:36)
          at Function.click (/home/runner/workspace/node_modules/@testing-library/react/dist/fire-event.js:15:52)
          at Object.<anonymous> (/home/runner/workspace/src/components/__tests__/AddThoughtModal.test.jsx:26:15)
          at Promise.then.completed (/home/runner/workspace/node_modules/jest-circus/build/utils.js:391:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/runner/workspace/node_modules/jest-circus/build/utils.js:316:10)
          at _callCircusTest (/home/runner/workspace/node_modules/jest-circus/build/run.js:218:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/runner/workspace/node_modules/jest-circus/build/run.js:155:3)
          at _runTestsForDescribeBlock (/home/runner/workspace/node_modules/jest-circus/build/run.js:66:9)
          at _runTestsForDescribeBlock (/home/runner/workspace/node_modules/jest-circus/build/run.js:60:9)
          at run (/home/runner/workspace/node_modules/jest-circus/build/run.js:25:3)
          at runAndTransformResultsToJestFormat (/home/runner/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21) undefined

       99 |   const handleSubmit = () => {
      100 |     if (!title.trim()) {
    > 101 |       alert('Please enter a title for your thought.');
          |       ^
      102 |       return;
      103 |     }
      104 |

      at VirtualConsole.<anonymous> (node_modules/jest-environment-jsdom/node_modules/jsdom/lib/jsdom/virtual-console.js:29:45)
      at handleSubmit (src/components/AddThoughtModal.jsx:101:7)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at node_modules/@testing-library/dom/dist/events.js:19:20
      at node_modules/@testing-library/react/dist/pure.js:108:16
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at act (node_modules/react/cjs/react.development.js:2512:16)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.eventWrapper (node_modules/@testing-library/react/dist/pure.js:107:28)
      at fireEvent (node_modules/@testing-library/dom/dist/events.js:12:35)
      at Function.fireEvent.<computed> [as click] (node_modules/@testing-library/dom/dist/events.js:110:36)
      at Function.click (node_modules/@testing-library/react/dist/fire-event.js:15:52)
      at Object.<anonymous> (src/components/__tests__/AddThoughtModal.test.jsx:26:15)

  ● AddThoughtModal › validates title before submission

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has type:  function
    Received has value: [Function anonymous]

      27 |     
      28 |     expect(mockCreateThought).not.toHaveBeenCalled();
    > 29 |     expect(window.alert).toHaveBeenCalledWith('Please enter a title for your thought.');
         |                          ^
      30 |   });
      31 |
      32 |   test('adds and updates segments', () => {

      at Object.<anonymous> (src/components/__tests__/AddThoughtModal.test.jsx:29:26)

  ● handles voice input correctly

    ReferenceError: mockCreateThought is not defined

      88 | test('handles voice input correctly', () => {
      89 |     const { getByTitle, getByPlaceholderText } = render(
    > 90 |       <AddThoughtModal createThought={mockCreateThought} onClose={mockOnClose} />
         |                                       ^
      91 |     );
      92 |     
      93 |     const micButton = getByTitle('Start recording');

      at Object.<anonymous> (src/components/__tests__/AddThoughtModal.test.jsx:90:39)

 FAIL  src/utils/__tests__/VoiceInputManager.test.js
  ● VoiceInputManager › handles speech recognition results

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "Hello world.", true, false
    Received: "undefined", false

    Number of calls: 1

      54 |     ];
      55 |     mockRecognition.onresult({ resultIndex: 0, results: shortResults });
    > 56 |     expect(onTranscriptUpdate).toHaveBeenCalledWith('Hello world.', true, false);
         |                                ^
      57 |
      58 |     // Test long sentence that should trigger segmentation
      59 |     const longResults = [

      at Object.<anonymous> (src/utils/__tests__/VoiceInputManager.test.js:56:32)

 FAIL  src/utils/__tests__/eventBus.test.js
  ● eventBus › IDs follow expected format

    expect(received).toMatch(expected)

    Expected pattern: /^[a-f0-9-]+$/
    Received string:  "tb_01JTCGVZQG4AVWMMYMBWW3GZTG"

      20 |     const bubbleId = newBubbleId();
      21 |     const segmentId = newSegmentId();
    > 22 |     expect(bubbleId).toMatch(/^[a-f0-9-]+$/);
         |                      ^
      23 |     expect(segmentId).toMatch(/^[a-f0-9-]+$/);
      24 |   });
      25 | });

      at Object.<anonymous> (src/utils/__tests__/eventBus.test.js:22:22)

 FAIL  src/services/__tests__/graphService.test.js
  ● graphService › findThoughtsByTag returns thoughts with matching tag

    Neo4jError: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1746324554080, routers=[], readers=[], writers=[]]
    :

      113 |     const session = this.driver.session();
      114 |     try {
    > 115 |       const result = await session.run(query, params);
          |                                    ^
      116 |       return result.records.map(record => record.toObject());
      117 |     } finally {
      118 |       await session.close();

      at captureStacktrace (node_modules/neo4j-driver-core/lib/result.js:624:17)
      at new Result (node_modules/neo4j-driver-core/lib/result.js:112:23)
      at Session.Object.<anonymous>.Session._run (node_modules/neo4j-driver-core/lib/session.js:224:16)
      at Session.run (node_modules/neo4j-driver-core/lib/session.js:188:27)
      at GraphService.executeCypher (src/services/graphService.js:115:36)
      at GraphService.findThoughtsByTag (src/services/graphService.js:123:17)
      at Object.<anonymous> (src/services/__tests__/graphService.test.js:17:40)

  ● graphService › findThoughtsByTag returns empty array for non-existent tag

    Neo4jError: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=default database, expirationTime=0, currentTime=1746324554085, routers=[], readers=[], writers=[]]
    :

      113 |     const session = this.driver.session();
      114 |     try {
    > 115 |       const result = await session.run(query, params);
          |                                    ^
      116 |       return result.records.map(record => record.toObject());
      117 |     } finally {
      118 |       await session.close();

      at captureStacktrace (node_modules/neo4j-driver-core/lib/result.js:624:17)
      at new Result (node_modules/neo4j-driver-core/lib/result.js:112:23)
      at Session.Object.<anonymous>.Session._run (node_modules/neo4j-driver-core/lib/session.js:224:16)
      at Session.run (node_modules/neo4j-driver-core/lib/session.js:188:27)
      at GraphService.executeCypher (src/services/graphService.js:115:36)
      at GraphService.findThoughtsByTag (src/services/graphService.js:123:17)
      at Object.<anonymous> (src/services/__tests__/graphService.test.js:24:40)

 FAIL  src/components/__tests__/Canvas.test.jsx
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    SyntaxError: /home/runner/workspace/src/components/Canvas.jsx: Unexpected keyword 'import'. (5:0)

      3 | import ReactFlow, { 
      4 |
    > 5 | import { graphService } from '../services/graphService';
        | ^
      6 |
      7 |   MiniMap, 
      8 |   Controls, 

      1 |
      2 | import { render, fireEvent } from '@testing-library/react';
    > 3 | import Canvas from '../Canvas';
        | ^
      4 |
      5 | describe('Canvas', () => {
      6 |   const mockThoughts = [

      at toParseError (node_modules/@babel/parser/src/parse-error.ts:95:45)
      at FlowParserMixin.raise (node_modules/@babel/parser/src/tokenizer/index.ts:1497:19)
      at FlowParserMixin.checkReservedWord (node_modules/@babel/parser/src/parser/expression.ts:2810:12)
      at FlowParserMixin.parseImportSpecifier (node_modules/@babel/parser/src/plugins/flow/index.ts:2889:14)
      at FlowParserMixin.parseNamedImportSpecifiers (node_modules/@babel/parser/src/parser/statement.ts:3392:36)
      at FlowParserMixin.parseImportSpecifiersAndAfter (node_modules/@babel/parser/src/parser/statement.ts:3124:37)
      at FlowParserMixin.parseImport (node_modules/@babel/parser/src/parser/statement.ts:3093:17)
      at FlowParserMixin.parseStatementContent (node_modules/@babel/parser/src/parser/statement.ts:601:25)
      at FlowParserMixin.parseStatementLike (node_modules/@babel/parser/src/parser/statement.ts:437:17)
      at FlowParserMixin.parseStatementLike (node_modules/@babel/parser/src/plugins/flow/index.ts:1990:26)
      at FlowParserMixin.parseModuleItem (node_modules/@babel/parser/src/parser/statement.ts:374:17)
      at FlowParserMixin.parseBlockOrModuleBlockBody (node_modules/@babel/parser/src/parser/statement.ts:1402:16)
      at FlowParserMixin.parseBlockBody (node_modules/@babel/parser/src/parser/statement.ts:1376:10)
      at FlowParserMixin.parseProgram (node_modules/@babel/parser/src/parser/statement.ts:225:10)
      at FlowParserMixin.parseTopLevel (node_modules/@babel/parser/src/parser/statement.ts:203:25)
      at FlowParserMixin.parseTopLevel (node_modules/@babel/parser/src/plugins/flow/index.ts:3371:30)
      at FlowParserMixin.parse (node_modules/@babel/parser/src/parser/index.ts:93:10)
      at parse (node_modules/@babel/parser/src/index.ts:92:38)
      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)
          at parser.next (<anonymous>)
      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:49:24)
          at normalizeFile.next (<anonymous>)
      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)
          at run.next (<anonymous>)
      at transform (node_modules/@babel/core/src/transform.ts:29:20)
          at transform.next (<anonymous>)
      at evaluateSync (node_modules/gensync/index.js:251:28)
      at fn (node_modules/gensync/index.js:89:14)
      at stopHiding - secret - don't use this - v1 (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)
      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)
      at Object.<anonymous> (src/components/__tests__/Canvas.test.jsx:3:1)

 FAIL  src/App.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    SyntaxError: /home/runner/workspace/src/components/Canvas.jsx: Unexpected keyword 'import'. (5:0)

      3 | import ReactFlow, { 
      4 |
    > 5 | import { graphService } from '../services/graphService';
        | ^
      6 |
      7 |   MiniMap, 
      8 |   Controls, 

      1 | import React, { useState, useEffect, useCallback } from 'react';
    > 2 | import Canvas from './components/Canvas';
        | ^
      3 | import Sidebar from './components/Sidebar';
      4 | import ThoughtDetailPanel from './components/ThoughtDetailPanel';
      5 | import AddThoughtModal from './components/AddThoughtModal';

      at toParseError (node_modules/@babel/parser/src/parse-error.ts:95:45)
      at FlowParserMixin.raise (node_modules/@babel/parser/src/tokenizer/index.ts:1497:19)
      at FlowParserMixin.checkReservedWord (node_modules/@babel/parser/src/parser/expression.ts:2810:12)
      at FlowParserMixin.parseImportSpecifier (node_modules/@babel/parser/src/plugins/flow/index.ts:2889:14)
      at FlowParserMixin.parseNamedImportSpecifiers (node_modules/@babel/parser/src/parser/statement.ts:3392:36)
      at FlowParserMixin.parseImportSpecifiersAndAfter (node_modules/@babel/parser/src/parser/statement.ts:3124:37)
      at FlowParserMixin.parseImport (node_modules/@babel/parser/src/parser/statement.ts:3093:17)
      at FlowParserMixin.parseStatementContent (node_modules/@babel/parser/src/parser/statement.ts:601:25)
      at FlowParserMixin.parseStatementLike (node_modules/@babel/parser/src/parser/statement.ts:437:17)
      at FlowParserMixin.parseStatementLike (node_modules/@babel/parser/src/plugins/flow/index.ts:1990:26)
      at FlowParserMixin.parseModuleItem (node_modules/@babel/parser/src/parser/statement.ts:374:17)
      at FlowParserMixin.parseBlockOrModuleBlockBody (node_modules/@babel/parser/src/parser/statement.ts:1402:16)
      at FlowParserMixin.parseBlockBody (node_modules/@babel/parser/src/parser/statement.ts:1376:10)
      at FlowParserMixin.parseProgram (node_modules/@babel/parser/src/parser/statement.ts:225:10)
      at FlowParserMixin.parseTopLevel (node_modules/@babel/parser/src/parser/statement.ts:203:25)
      at FlowParserMixin.parseTopLevel (node_modules/@babel/parser/src/plugins/flow/index.ts:3371:30)
      at FlowParserMixin.parse (node_modules/@babel/parser/src/parser/index.ts:93:10)
      at parse (node_modules/@babel/parser/src/index.ts:92:38)
      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)
          at parser.next (<anonymous>)
      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:49:24)
          at normalizeFile.next (<anonymous>)
      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)
          at run.next (<anonymous>)
      at transform (node_modules/@babel/core/src/transform.ts:29:20)
          at transform.next (<anonymous>)
      at evaluateSync (node_modules/gensync/index.js:251:28)
      at fn (node_modules/gensync/index.js:89:14)
      at stopHiding - secret - don't use this - v1 (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)
      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)
      at Object.<anonymous> (src/App.jsx:2:1)
      at Object.<anonymous> (src/App.test.js:2:1)

Test Suites: 9 failed, 9 total
Tests:       13 failed, 14 passed, 27 total
Snapshots:   0 total
Time:        10.402 s
Ran all test suites.