
> logomesh@0.1.0 test
The CJS build of Vite's Node API is deprecated. See https://vite.dev/guide/troubleshooting.html#vite-cjs-node-api-deprecated for more details.

 DEV  v3.2.4 /home/runner/workspace




 ❯ src/components/__tests__/AddThoughtModal.test.jsx (6 tests | 1 failed) 168ms
   ✓ AddThoughtModal > renders all form elements 53ms
   ✓ AddThoughtModal > validates title before submission 18ms
   ✓ AddThoughtModal > adds and updates segments 33ms
   ✓ AddThoughtModal > handles tag addition 14ms
   ✓ AddThoughtModal > creates thought with correct data structure 26ms
   × handles voice input correctly 21ms
     → Cannot delete property 'webkitSpeechRecognition' of #<Object>

 ❯ src/components/__tests__/Sidebar.test.jsx (4 tests | 2 failed) 292ms
   ✓ Sidebar > renders all thoughts initially 68ms
   × Sidebar > filters thoughts based on field name 163ms
     → Found multiple elements with the role "listbox"

Here are the matching elements:

Ignored nodes: comments, script, style
<select
  class="w-full mb-2 p-2 border rounded"
  multiple=""
>
  <option
    value="type"
  >
    type
  </option>
  <option
    value="domain"
  >
    domain
  </option>
</select>

Ignored nodes: comments, script, style
<select
  class="w-full mb-4 p-2 border rounded"
  multiple=""
>
  <option
    value="text"
  >
    text
  </option>
  <option
    value="location"
  >
    location
  </option>
  <option
    value="date"
  >
    date
  </option>
  <option
    value="numeric"
  >
    numeric
  </option>
</select>

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
<body>
  <div>
    <div
      class="w-1/4 p-4 border-r bg-gray-50 dark:bg-gray-800 overflow-y-auto"
    >
      <div
        class="flex justify-between items-center mb-4"
      >
        <span
          class="text-sm text-gray-500 dark:text-gray-400"
        >
          Schema v
          0.5
        </span>
        <h2
          class="text-lg font-bold"
        >
          Thought List
        </h2>
        <button
          class="px-2 py-1 bg-gray-300 dark:bg-gray-600 rounded"
        >
          Toggle Mode
        </button>
      </div>
      <button
        class="w-full mb-2 px-4 py-2 bg-blue-500 text-white rounded"
      >
        Add New Thought
      </button>
      <button
        class="w-full mb-2 px-4 py-2 bg-green-500 text-white rounded"
      >
        Export All
      </button>
      <button
        class="w-full mb-2 px-4 py-2 bg-yellow-500 text-black rounded"
      >
        Export Filtered
      </button>
      <input
        class="hidden"
        id="importFile"
        type="file"
      />
      <label
        class="w-full mb-4 px-4 py-2 bg-indigo-500 text-white rounded cursor-pointer block text-center"
        for="importFile"
      >
        Import from JSON
      </label>
      <button
        class="w-full mb-2 px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600"
      >
        Clear Cache
      </button>
      <button
        class="w-full mb-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
      >
        View Cache
      </button>
      <button
        class="w-full mb-2 px-4 py-2 bg-orange-500 text-white rounded hover:bg-orange-600"
      >
        Export Errors (
        0
        )
      </button>
      <div
        class="mb-4"
      >
        <h3
          class="text-md font-semibold mb-2"
        >
          Filter Segments
        </h3>
        <label
          class="block mb-1 font-medium"
        >
          Field Names:
        </label>
        <select
          class="w-full mb-2 p-2 border rounded"
          multiple=""
        >
          <option
            value="type"
          >
            type
          </option>
          <option
            value="domain"
          >
            domain
          </option>
        </select>
        <label
          class="block mb-1 font-medium"
        >
          Field Value:
        </label>
        <input
          class="w-full mb-2 p-2 border rounded"
          placeholder="Enter value to match"
          type="text"
          value=""
        />
        <label
          class="block mb-1 font-medium"
        >
          Field Types (soon):
        </label>
        <select
          class="w-full mb-4 p-2 border rounded"
          multiple=""
        >
          <option
            value="text"
          >
            text
          </option>
          <option
            value="location"
          >
            location
          </option>
          <option
            value="date"
          >
            date
          </option>
          <option
            value="numeric"
          >
            numeric
          </option>
        </select>
        <button
          class="w-full bg-gray-400 text-black py-1 rounded"
        >
          Reset Filters
        </button>
      </div>
      <div
        class="mb-4 text-sm text-gray-700 dark:text-gray-300"
      >
        <strong>
          Active Filters:
        </strong>
        <ul
          class="list-disc list-inside"
        >
          <li>
            None
          </li>
        </ul>
      </div>
      <ul>
        <li
          class="mb-3"
        >
          <div
            class="cursor-pointer font-semibold hover:underline"
          >
            Philosophy Thought
          </div>
          <ul
            class="ml-3 mt-1 text-sm"
          >
            <li
              class="text-gray-600 dark:text-gray-300"
            >
              - 
              Logic
            </li>
          </ul>
        </li>
        <li
          class="mb-3"
        >
          <div
            class="cursor-pointer font-semibold hover:underline"
          >
            AI Thought
          </div>
          <ul
            class="ml-3 mt-1 text-sm"
          >
            <li
              class="text-gray-600 dark:text-gray-300"
            >
              - 
              Neural Networks
            </li>
          </ul>
        </li>
      </ul>
      <div
        class="mt-6"
      >
        <h3
          class="text-md font-semibold mb-2"
        >
          Batch Edit
        </h3>
        <button
          class="w-full mb-2 px-4 py-1 bg-purple-500 text-white rounded"
        >
          Add Tag to Filtered
        </button>
        <button
          class="w-full px-4 py-1 bg-pink-500 text-white rounded"
        >
          Change Color of Filtered
        </button>
      </div>
    </div>
  </div>
</body>
   × Sidebar > resets filters when reset button clicked 41ms
     → expected "spy" to be called with arguments: [ [] ]

Received: 

  1st spy call:

  [
-   [],
+   [
+     "test-1",
+     "test-2",
+   ],
  ]

  2nd spy call:

  [
-   [],
+   [
+     "test-1",
+     "test-2",
+   ],
  ]

  3rd spy call:

  [
-   [],
+   [
+     "test-1",
+     "test-2",
+   ],
  ]

  4th spy call:

  [
-   [],
+   [
+     "test-1",
+     "test-2",
+   ],
  ]


Number of calls: 4

   ✓ Sidebar > opens add thought modal when button clicked 18ms

 ✓ src/components/__tests__/ThoughtDetailPanel.test.jsx (4 tests) 870ms
   ✓ ThoughtDetailPanel > renders thought details correctly  756ms
 ❯ src/utils/__tests__/dataHandlers.test.js (3 tests | 2 failed) 63ms
   × Data Handling > Export Handler > exports with correct metadata structure 31ms
     → expected undefined to be 'data:application/json;base64,e30=' // Object.is equality
   ✓ Data Handling > Import Handler > normalizes legacy format thoughts 18ms
   × Data Handling > Import Handler > handles modern format with metadata 12ms
     → expected "spy" to be called with arguments: [ [ { …(8) } ] ]

Received: 

  1st spy call:

@@ -9,10 +9,11 @@
          "y": 0,
        },
        "segments": [
          {
            "content": "Test content",
+           "embedding_vector": [],
            "fields": {
              "type": "note",
            },
            "segment_id": "01HN5G4K8PMXQ0VGWX7CTBZ3YY",
            "title": "Test Segment",


Number of calls: 1

stderr | src/components/__tests__/Canvas.test.jsx > Canvas > renders without crashing
Warning: A suspended resource finished loading inside a test, but the event was not wrapped in act(...).

When testing, code that resolves suspended data should be wrapped into act(...):

act(() => {
  /* finish loading suspended data */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act

 ❯ src/components/__tests__/Canvas.test.jsx (1 test | 1 failed) 76ms
   × Canvas > renders without crashing 70ms
     → Unable to find an element by: [data-testid="cytoscape-mock"]

Ignored nodes: comments, script, style
<body>
  <div>
    <div>
      Loading...
    </div>
  </div>
</body>
 ❯ src/utils/__tests__/VoiceInputManager.test.js (5 tests | 2 failed) 46ms
   ✓ VoiceInputManager > initializes with correct configuration 3ms
   ✓ VoiceInputManager > handles start/stop listening correctly 2ms
   × VoiceInputManager > handles speech recognition results 27ms
     → expected "spy" to be called with arguments: [ 'Hello world.', true, false ]

Received: 

  1st spy call:

  [
    "Hello world.",
-   true,
    false,
  ]


Number of calls: 1

   ✓ VoiceInputManager > handles speech recognition errors 8ms
   × VoiceInputManager > checks browser support correctly 4ms
     → window.webkitSpeechRecognition is not a constructor


 ❯ src/services/__tests__/graphService.test.js (2 tests | 1 failed) 27ms
   × graphService > findThoughtsByTag returns thoughts with matching tag 23ms
     → expected [] to deeply equal [ { properties: { …(2) } } ]
   ✓ graphService > findThoughtsByTag returns empty array for non-existent tag 1ms
 ✓ src/utils/__tests__/eventBus.test.js (3 tests) 6ms
stderr | src/App.test.jsx > renders main app components
Backend API not available: Error: [vitest] No "apiService" export is defined on the "./services/apiService" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError (file:///home/runner/workspace/node_modules/vitest/dist/chunks/execute.B7h3T_Hc.js:284:17)
    at Object.get (file:///home/runner/workspace/node_modules/vitest/dist/chunks/execute.B7h3T_Hc.js:330:16)
    at loadInitialData (/home/runner/workspace/src/App.jsx:103:40)
    at /home/runner/workspace/src/App.jsx:112:5
    at commitHookEffectListMount (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
    at commitPassiveMountOnFiber (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
    at commitPassiveMountEffects_complete (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
    at commitPassiveMountEffects_begin (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
    at commitPassiveMountEffects (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
    at flushPassiveEffectsImpl (/home/runner/workspace/node_modules/react-dom/cjs/react-dom.development.js:27078:3) {
  codeFrame: 'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"./services/apiService"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n' +
    '  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n' +
    '  \x1B[35mreturn\x1B[39m {\n' +
    '    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n' +
    '    \x1B[90m// your mocked methods\x1B[39m\n' +
    '  }\n' +
    '})'
}

 ✓ src/App.test.jsx (1 test) 166ms

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯ Failed Tests 9 ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/services/__tests__/graphService.test.js > graphService > findThoughtsByTag returns thoughts with matching tag
AssertionError: expected [] to deeply equal [ { properties: { …(2) } } ]

- Expected
+ Received

- [
-   {
-     "properties": {
-       "tags": [
-         {
-           "color": "#000",
-           "name": "tag1",
-         },
-       ],
-       "thought_bubble_id": "01HN5G4K8PMXQ0VGWX7CTBZ3YV",
-     },
-   },
- ]
+ []

 ❯ src/services/__tests__/graphService.test.js:17:21
     15|   test('findThoughtsByTag returns thoughts with matching tag', async () => {
     16|     const results = await graphService.findThoughtsByTag('tag1');
     17|     expect(results).toEqual([{ properties: mockThoughts[0] }]);
       |                     ^
     18|   });
     19| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/9]⎯

 FAIL  src/components/__tests__/AddThoughtModal.test.jsx > handles voice input correctly
TypeError: Cannot delete property 'webkitSpeechRecognition' of #<Object>
 ❯ src/components/__tests__/AddThoughtModal.test.jsx:166:3
    164| 
    165|   // Test browser support error
    166|   delete window.webkitSpeechRecognition;
       |   ^
    167|   fireEvent.click(micButton);
    168|   expect(window.alert).toHaveBeenCalledWith(

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/9]⎯

 FAIL  src/components/__tests__/Canvas.test.jsx > Canvas > renders without crashing
TestingLibraryElementError: Unable to find an element by: [data-testid="cytoscape-mock"]

Ignored nodes: comments, script, style
<body>
  <div>
    <div>
      Loading...
    </div>
  </div>
</body>
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/components/__tests__/Canvas.test.jsx:23:12
     21|       </Suspense>
     22|     );
     23|     expect(getByTestId('cytoscape-mock')).toBeInTheDocument();
       |            ^
     24|   });
     25| });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/9]⎯

 FAIL  src/components/__tests__/Sidebar.test.jsx > Sidebar > filters thoughts based on field name
TestingLibraryElementError: Found multiple elements with the role "listbox"

Here are the matching elements:

Ignored nodes: comments, script, style
<select
  class="w-full mb-2 p-2 border rounded"
  multiple=""
>
  <option
    value="type"
  >
    type
  </option>
  <option
    value="domain"
  >
    domain
  </option>
</select>

Ignored nodes: comments, script, style
<select
  class="w-full mb-4 p-2 border rounded"
  multiple=""
>
  <option
    value="text"
  >
    text
  </option>
  <option
    value="location"
  >
    location
  </option>
  <option
    value="date"
  >
    date
  </option>
  <option
    value="numeric"
  >
    numeric
  </option>
</select>

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
<body>
  <div>
    <div
      class="w-1/4 p-4 border-r bg-gray-50 dark:bg-gray-800 overflow-y-auto"
    >
      <div
        class="flex justify-between items-center mb-4"
      >
        <span
          class="text-sm text-gray-500 dark:text-gray-400"
        >
          Schema v
          0.5
        </span>
        <h2
          class="text-lg font-bold"
        >
          Thought List
        </h2>
        <button
          class="px-2 py-1 bg-gray-300 dark:bg-gray-600 rounded"
        >
          Toggle Mode
        </button>
      </div>
      <button
        class="w-full mb-2 px-4 py-2 bg-blue-500 text-white rounded"
      >
        Add New Thought
      </button>
      <button
        class="w-full mb-2 px-4 py-2 bg-green-500 text-white rounded"
      >
        Export All
      </button>
      <button
        class="w-full mb-2 px-4 py-2 bg-yellow-500 text-black rounded"
      >
        Export Filtered
      </button>
      <input
        class="hidden"
        id="importFile"
        type="file"
      />
      <label
        class="w-full mb-4 px-4 py-2 bg-indigo-500 text-white rounded cursor-pointer block text-center"
        for="importFile"
      >
        Import from JSON
      </label>
      <button
        class="w-full mb-2 px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600"
      >
        Clear Cache
      </button>
      <button
        class="w-full mb-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
      >
        View Cache
      </button>
      <button
        class="w-full mb-2 px-4 py-2 bg-orange-500 text-white rounded hover:bg-orange-600"
      >
        Export Errors (
        0
        )
      </button>
      <div
        class="mb-4"
      >
        <h3
          class="text-md font-semibold mb-2"
        >
          Filter Segments
        </h3>
        <label
          class="block mb-1 font-medium"
        >
          Field Names:
        </label>
        <select
          class="w-full mb-2 p-2 border rounded"
          multiple=""
        >
          <option
            value="type"
          >
            type
          </option>
          <option
            value="domain"
          >
            domain
          </option>
        </select>
        <label
          class="block mb-1 font-medium"
        >
          Field Value:
        </label>
        <input
          class="w-full mb-2 p-2 border rounded"
          placeholder="Enter value to match"
          type="text"
          value=""
        />
        <label
          class="block mb-1 font-medium"
        >
          Field Types (soon):
        </label>
        <select
          class="w-full mb-4 p-2 border rounded"
          multiple=""
        >
          <option
            value="text"
          >
            text
          </option>
          <option
            value="location"
          >
            location
          </option>
          <option
            value="date"
          >
            date
          </option>
          <option
            value="numeric"
          >
            numeric
          </option>
        </select>
        <button
          class="w-full bg-gray-400 text-black py-1 rounded"
        >
          Reset Filters
        </button>
      </div>
      <div
        class="mb-4 text-sm text-gray-700 dark:text-gray-300"
      >
        <strong>
          Active Filters:
        </strong>
        <ul
          class="list-disc list-inside"
        >
          <li>
            None
          </li>
        </ul>
      </div>
      <ul>
        <li
          class="mb-3"
        >
          <div
            class="cursor-pointer font-semibold hover:underline"
          >
            Philosophy Thought
          </div>
          <ul
            class="ml-3 mt-1 text-sm"
          >
            <li
              class="text-gray-600 dark:text-gray-300"
            >
              - 
              Logic
            </li>
          </ul>
        </li>
        <li
          class="mb-3"
        >
          <div
            class="cursor-pointer font-semibold hover:underline"
          >
            AI Thought
          </div>
          <ul
            class="ml-3 mt-1 text-sm"
          >
            <li
              class="text-gray-600 dark:text-gray-300"
            >
              - 
              Neural Networks
            </li>
          </ul>
        </li>
      </ul>
      <div
        class="mt-6"
      >
        <h3
          class="text-md font-semibold mb-2"
        >
          Batch Edit
        </h3>
        <button
          class="w-full mb-2 px-4 py-1 bg-purple-500 text-white rounded"
        >
          Add Tag to Filtered
        </button>
        <button
          class="w-full px-4 py-1 bg-pink-500 text-white rounded"
        >
          Change Color of Filtered
        </button>
      </div>
    </div>
  </div>
</body>
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ getElementError node_modules/@testing-library/dom/dist/query-helpers.js:20:35
 ❯ getMultipleElementsFoundError node_modules/@testing-library/dom/dist/query-helpers.js:23:10
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:55:13
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/components/__tests__/Sidebar.test.jsx:47:27
     45|   test('filters thoughts based on field name', () => {
     46|     render(<Sidebar {...mockProps} />);
     47|     const select = screen.getByRole('listbox');
       |                           ^
     48|     fireEvent.change(select, { target: { value: 'domain' } });
     49|     expect(mockProps.setActiveFilters).toHaveBeenCalled();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/9]⎯

 FAIL  src/components/__tests__/Sidebar.test.jsx > Sidebar > resets filters when reset button clicked
AssertionError: expected "spy" to be called with arguments: [ [] ]

Received: 

  1st spy call:

  [
-   [],
+   [
+     "test-1",
+     "test-2",
+   ],
  ]

  2nd spy call:

  [
-   [],
+   [
+     "test-1",
+     "test-2",
+   ],
  ]

  3rd spy call:

  [
-   [],
+   [
+     "test-1",
+     "test-2",
+   ],
  ]

  4th spy call:

  [
-   [],
+   [
+     "test-1",
+     "test-2",
+   ],
  ]


Number of calls: 4

 ❯ src/components/__tests__/Sidebar.test.jsx:56:40
     54|     const resetButton = screen.getByText('Reset Filters');
     55|     fireEvent.click(resetButton);
     56|     expect(mockProps.setActiveFilters).toHaveBeenCalledWith([]);
       |                                        ^
     57|   });
     58| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/9]⎯

 FAIL  src/utils/__tests__/VoiceInputManager.test.js > VoiceInputManager > handles speech recognition results
AssertionError: expected "spy" to be called with arguments: [ 'Hello world.', true, false ]

Received: 

  1st spy call:

  [
    "Hello world.",
-   true,
    false,
  ]


Number of calls: 1

 ❯ src/utils/__tests__/VoiceInputManager.test.js:66:32
     64|     };
     65|     mockRecognition.onresult(mockResults);
     66|     expect(onTranscriptUpdate).toHaveBeenCalledWith('Hello world.', true, false);
       |                                ^
     67| 
     68|     // Test long sentence that should trigger segmentation

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/9]⎯

 FAIL  src/utils/__tests__/VoiceInputManager.test.js > VoiceInputManager > checks browser support correctly
TypeError: window.webkitSpeechRecognition is not a constructor
 ❯ VoiceInputManager.initSpeechRecognition src/utils/VoiceInputManager.js:12:26
     10|   initSpeechRecognition() {
     11|     if ('webkitSpeechRecognition' in window) {
     12|       this.recognition = new window.webkitSpeechRecognition();
       |                          ^
     13|       this.recognition.continuous = true;
     14|       this.recognition.interimResults = true;
 ❯ new VoiceInputManager src/utils/VoiceInputManager.js:7:10
 ❯ src/utils/__tests__/VoiceInputManager.test.js:108:32

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/9]⎯

 FAIL  src/utils/__tests__/dataHandlers.test.js > Data Handling > Export Handler > exports with correct metadata structure
AssertionError: expected undefined to be 'data:application/json;base64,e30=' // Object.is equality

- Expected: 
"data:application/json;base64,e30="

+ Received: 
undefined

 ❯ src/utils/__tests__/dataHandlers.test.js:59:31
     57|       expect(appendChildSpy).toHaveBeenCalled();
     58|       const anchorNode = appendChildSpy.mock.calls[0][0];
     59|       expect(anchorNode.href).toBe(mockUrl);
       |                               ^
     60|     });
     61|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/9]⎯

 FAIL  src/utils/__tests__/dataHandlers.test.js > Data Handling > Import Handler > handles modern format with metadata
AssertionError: expected "spy" to be called with arguments: [ [ { …(8) } ] ]

Received: 

  1st spy call:

@@ -9,10 +9,11 @@
          "y": 0,
        },
        "segments": [
          {
            "content": "Test content",
+           "embedding_vector": [],
            "fields": {
              "type": "note",
            },
            "segment_id": "01HN5G4K8PMXQ0VGWX7CTBZ3YY",
            "title": "Test Segment",


Number of calls: 1

 ❯ src/utils/__tests__/dataHandlers.test.js:138:24
    136|       fileReader.onload({ target: { result: fileReader.result } });
    137| 
    138|       expect(callback).toHaveBeenCalledWith(mockThoughts);
       |                        ^
    139|     });
    140|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/9]⎯


 Test Files  6 failed | 3 passed (9)
      Tests  9 failed | 20 passed (29)
   Start at  22:12:14
   Duration  13.40s (transform 561ms, setup 4.83s, collect 2.47s, tests 1.71s, environment 17.41s, prepare 3.74s)

 FAIL  Tests failed. Watching for file changes...
       press h to show help, press q to quit